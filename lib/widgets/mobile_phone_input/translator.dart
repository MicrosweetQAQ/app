import 'package:app/l10n/l10n.dart';
import 'package:flutter/material.dart';

typedef TranslateCountryFn = String? Function(BuildContext ctx);

class CountryTranslator {
  static final Map<String, TranslateCountryFn> _countryNames = {
    'AF': (ctx) => ctx.l10n.af_,
    'AX': (ctx) => ctx.l10n.ax_,
    'AL': (ctx) => ctx.l10n.al_,
    'DZ': (ctx) => ctx.l10n.dz_,
    'AS': (ctx) => ctx.l10n.as_,
    'AD': (ctx) => ctx.l10n.ad_,
    'AO': (ctx) => ctx.l10n.ao_,
    'AI': (ctx) => ctx.l10n.ai_,
    'AQ': (ctx) => ctx.l10n.aq_,
    'AG': (ctx) => ctx.l10n.ag_,
    'AR': (ctx) => ctx.l10n.ar_,
    'AM': (ctx) => ctx.l10n.am_,
    'AW': (ctx) => ctx.l10n.aw_,
    'AU': (ctx) => ctx.l10n.au_,
    'AT': (ctx) => ctx.l10n.at_,
    'AZ': (ctx) => ctx.l10n.az_,
    'BS': (ctx) => ctx.l10n.bs_,
    'BH': (ctx) => ctx.l10n.bh_,
    'BD': (ctx) => ctx.l10n.bd_,
    'BB': (ctx) => ctx.l10n.bb_,
    'BY': (ctx) => ctx.l10n.by_,
    'BE': (ctx) => ctx.l10n.be_,
    'BZ': (ctx) => ctx.l10n.bz_,
    'BJ': (ctx) => ctx.l10n.bj_,
    'BM': (ctx) => ctx.l10n.bm_,
    'BT': (ctx) => ctx.l10n.bt_,
    'BO': (ctx) => ctx.l10n.bo_,
    'BA': (ctx) => ctx.l10n.ba_,
    'BW': (ctx) => ctx.l10n.bw_,
    'BV': (ctx) => ctx.l10n.bv_,
    'BR': (ctx) => ctx.l10n.br_,
    'IO': (ctx) => ctx.l10n.io_,
    'BN': (ctx) => ctx.l10n.bn_,
    'BG': (ctx) => ctx.l10n.bg_,
    'BF': (ctx) => ctx.l10n.bf_,
    'BI': (ctx) => ctx.l10n.bi_,
    'KH': (ctx) => ctx.l10n.kh_,
    'CM': (ctx) => ctx.l10n.cm_,
    'CA': (ctx) => ctx.l10n.ca_,
    'CV': (ctx) => ctx.l10n.cv_,
    'KY': (ctx) => ctx.l10n.ky_,
    'CF': (ctx) => ctx.l10n.cf_,
    'TD': (ctx) => ctx.l10n.td_,
    'CL': (ctx) => ctx.l10n.cl_,
    'CN': (ctx) => ctx.l10n.cn_,
    'CX': (ctx) => ctx.l10n.cx_,
    'CC': (ctx) => ctx.l10n.cc_,
    'CO': (ctx) => ctx.l10n.co_,
    'KM': (ctx) => ctx.l10n.km_,
    'CG': (ctx) => ctx.l10n.cg_,
    'CD': (ctx) => ctx.l10n.cd_,
    'CK': (ctx) => ctx.l10n.ck_,
    'CR': (ctx) => ctx.l10n.cr_,
    'CI': (ctx) => ctx.l10n.ci_,
    'HR': (ctx) => ctx.l10n.hr_,
    'CU': (ctx) => ctx.l10n.cu_,
    'CY': (ctx) => ctx.l10n.cy_,
    'CZ': (ctx) => ctx.l10n.cz_,
    'DK': (ctx) => ctx.l10n.dk_,
    'DJ': (ctx) => ctx.l10n.dj_,
    'DM': (ctx) => ctx.l10n.dm_,
    'DO': (ctx) => ctx.l10n.do_,
    'EC': (ctx) => ctx.l10n.ec_,
    'EG': (ctx) => ctx.l10n.eg_,
    'SV': (ctx) => ctx.l10n.sv_,
    'GQ': (ctx) => ctx.l10n.gq_,
    'ER': (ctx) => ctx.l10n.er_,
    'EE': (ctx) => ctx.l10n.ee_,
    'ET': (ctx) => ctx.l10n.et_,
    'FK': (ctx) => ctx.l10n.fk_,
    'FO': (ctx) => ctx.l10n.fo_,
    'FJ': (ctx) => ctx.l10n.fj_,
    'FI': (ctx) => ctx.l10n.fi_,
    'FR': (ctx) => ctx.l10n.fr_,
    'GF': (ctx) => ctx.l10n.gf_,
    'PF': (ctx) => ctx.l10n.pf_,
    'TF': (ctx) => ctx.l10n.tf_,
    'GA': (ctx) => ctx.l10n.ga_,
    'GM': (ctx) => ctx.l10n.gm_,
    'GE': (ctx) => ctx.l10n.ge_,
    'DE': (ctx) => ctx.l10n.de_,
    'GH': (ctx) => ctx.l10n.gh_,
    'GI': (ctx) => ctx.l10n.gi_,
    'GR': (ctx) => ctx.l10n.gr_,
    'GL': (ctx) => ctx.l10n.gl_,
    'GD': (ctx) => ctx.l10n.gd_,
    'GP': (ctx) => ctx.l10n.gp_,
    'GU': (ctx) => ctx.l10n.gu_,
    'GT': (ctx) => ctx.l10n.gt_,
    'GG': (ctx) => ctx.l10n.gg_,
    'GN': (ctx) => ctx.l10n.gn_,
    'GW': (ctx) => ctx.l10n.gw_,
    'GY': (ctx) => ctx.l10n.gy_,
    'HT': (ctx) => ctx.l10n.ht_,
    'HM': (ctx) => ctx.l10n.hm_,
    'VA': (ctx) => ctx.l10n.va_,
    'HN': (ctx) => ctx.l10n.hn_,
    'HK': (ctx) => ctx.l10n.hk_,
    'HU': (ctx) => ctx.l10n.hu_,
    'IS': (ctx) => ctx.l10n.is_,
    'IN': (ctx) => ctx.l10n.in_,
    'ID': (ctx) => ctx.l10n.id_,
    'IR': (ctx) => ctx.l10n.ir_,
    'IQ': (ctx) => ctx.l10n.iq_,
    'IE': (ctx) => ctx.l10n.ie_,
    'IM': (ctx) => ctx.l10n.im_,
    'IL': (ctx) => ctx.l10n.il_,
    'IT': (ctx) => ctx.l10n.it_,
    'JM': (ctx) => ctx.l10n.jm_,
    'JP': (ctx) => ctx.l10n.jp_,
    'JE': (ctx) => ctx.l10n.je_,
    'JO': (ctx) => ctx.l10n.jo_,
    'KZ': (ctx) => ctx.l10n.kz_,
    'KE': (ctx) => ctx.l10n.ke_,
    'KI': (ctx) => ctx.l10n.ki_,
    'KP': (ctx) => ctx.l10n.kp_,
    'KR': (ctx) => ctx.l10n.kr_,
    'XK': (ctx) => ctx.l10n.xk_,
    'KW': (ctx) => ctx.l10n.kw_,
    'KG': (ctx) => ctx.l10n.kg_,
    'LA': (ctx) => ctx.l10n.la_,
    'LV': (ctx) => ctx.l10n.lv_,
    'LB': (ctx) => ctx.l10n.lb_,
    'LS': (ctx) => ctx.l10n.ls_,
    'LR': (ctx) => ctx.l10n.lr_,
    'LY': (ctx) => ctx.l10n.ly_,
    'LI': (ctx) => ctx.l10n.li_,
    'LT': (ctx) => ctx.l10n.lt_,
    'LU': (ctx) => ctx.l10n.lu_,
    'MO': (ctx) => ctx.l10n.mo_,
    'MK': (ctx) => ctx.l10n.mk_,
    'MG': (ctx) => ctx.l10n.mg_,
    'MW': (ctx) => ctx.l10n.mw_,
    'MY': (ctx) => ctx.l10n.my_,
    'MV': (ctx) => ctx.l10n.mv_,
    'ML': (ctx) => ctx.l10n.ml_,
    'MT': (ctx) => ctx.l10n.mt_,
    'MH': (ctx) => ctx.l10n.mh_,
    'MQ': (ctx) => ctx.l10n.mq_,
    'MR': (ctx) => ctx.l10n.mr_,
    'MU': (ctx) => ctx.l10n.mu_,
    'YT': (ctx) => ctx.l10n.yt_,
    'MX': (ctx) => ctx.l10n.mx_,
    'FM': (ctx) => ctx.l10n.fm_,
    'MD': (ctx) => ctx.l10n.md_,
    'MC': (ctx) => ctx.l10n.mc_,
    'MN': (ctx) => ctx.l10n.mn_,
    'ME': (ctx) => ctx.l10n.me_,
    'MS': (ctx) => ctx.l10n.ms_,
    'MA': (ctx) => ctx.l10n.ma_,
    'MZ': (ctx) => ctx.l10n.mz_,
    'MM': (ctx) => ctx.l10n.mm_,
    'NA': (ctx) => ctx.l10n.na_,
    'NR': (ctx) => ctx.l10n.nr_,
    'NP': (ctx) => ctx.l10n.np_,
    'NL': (ctx) => ctx.l10n.nl_,
    'AN': (ctx) => ctx.l10n.an_,
    'NC': (ctx) => ctx.l10n.nc_,
    'NZ': (ctx) => ctx.l10n.nz_,
    'NI': (ctx) => ctx.l10n.ni_,
    'NE': (ctx) => ctx.l10n.ne_,
    'NG': (ctx) => ctx.l10n.ng_,
    'NU': (ctx) => ctx.l10n.nu_,
    'NF': (ctx) => ctx.l10n.nf_,
    'MP': (ctx) => ctx.l10n.mp_,
    'NO': (ctx) => ctx.l10n.no_,
    'OM': (ctx) => ctx.l10n.om_,
    'PK': (ctx) => ctx.l10n.pk_,
    'PW': (ctx) => ctx.l10n.pw_,
    'PS': (ctx) => ctx.l10n.ps_,
    'PA': (ctx) => ctx.l10n.pa_,
    'PG': (ctx) => ctx.l10n.pg_,
    'PY': (ctx) => ctx.l10n.py_,
    'PE': (ctx) => ctx.l10n.pe_,
    'PH': (ctx) => ctx.l10n.ph_,
    'PN': (ctx) => ctx.l10n.pn_,
    'PL': (ctx) => ctx.l10n.pl_,
    'PT': (ctx) => ctx.l10n.pt_,
    'PR': (ctx) => ctx.l10n.pr_,
    'QA': (ctx) => ctx.l10n.qa_,
    'RO': (ctx) => ctx.l10n.ro_,
    'RU': (ctx) => ctx.l10n.ru_,
    'RW': (ctx) => ctx.l10n.rw_,
    'RE': (ctx) => ctx.l10n.re_,
    'BL': (ctx) => ctx.l10n.bl_,
    'SH': (ctx) => ctx.l10n.sh_,
    'KN': (ctx) => ctx.l10n.kn_,
    'LC': (ctx) => ctx.l10n.lc_,
    'MF': (ctx) => ctx.l10n.mf_,
    'PM': (ctx) => ctx.l10n.pm_,
    'VC': (ctx) => ctx.l10n.vc_,
    'WS': (ctx) => ctx.l10n.ws_,
    'SM': (ctx) => ctx.l10n.sm_,
    'ST': (ctx) => ctx.l10n.st_,
    'SA': (ctx) => ctx.l10n.sa_,
    'SN': (ctx) => ctx.l10n.sn_,
    'RS': (ctx) => ctx.l10n.rs_,
    'SC': (ctx) => ctx.l10n.sc_,
    'SL': (ctx) => ctx.l10n.sl_,
    'SG': (ctx) => ctx.l10n.sg_,
    'SK': (ctx) => ctx.l10n.sk_,
    'SI': (ctx) => ctx.l10n.si_,
    'SB': (ctx) => ctx.l10n.sb_,
    'SO': (ctx) => ctx.l10n.so_,
    'ZA': (ctx) => ctx.l10n.za_,
    'SS': (ctx) => ctx.l10n.ss_,
    'GS': (ctx) => ctx.l10n.gs_,
    'ES': (ctx) => ctx.l10n.es_,
    'LK': (ctx) => ctx.l10n.lk_,
    'SD': (ctx) => ctx.l10n.sd_,
    'SR': (ctx) => ctx.l10n.sr_,
    'SJ': (ctx) => ctx.l10n.sj_,
    'SZ': (ctx) => ctx.l10n.sz_,
    'SE': (ctx) => ctx.l10n.se_,
    'CH': (ctx) => ctx.l10n.ch_,
    'SY': (ctx) => ctx.l10n.sy_,
    'TW': (ctx) => ctx.l10n.tw_,
    'TJ': (ctx) => ctx.l10n.tj_,
    'TZ': (ctx) => ctx.l10n.tz_,
    'TH': (ctx) => ctx.l10n.th_,
    'TL': (ctx) => ctx.l10n.tl_,
    'TG': (ctx) => ctx.l10n.tg_,
    'TK': (ctx) => ctx.l10n.tk_,
    'TO': (ctx) => ctx.l10n.to_,
    'TT': (ctx) => ctx.l10n.tt_,
    'TN': (ctx) => ctx.l10n.tn_,
    'TR': (ctx) => ctx.l10n.tr_,
    'TM': (ctx) => ctx.l10n.tm_,
    'TC': (ctx) => ctx.l10n.tc_,
    'TV': (ctx) => ctx.l10n.tv_,
    'UG': (ctx) => ctx.l10n.ug_,
    'UA': (ctx) => ctx.l10n.ua_,
    'AE': (ctx) => ctx.l10n.ae_,
    'GB': (ctx) => ctx.l10n.gb_,
    'US': (ctx) => ctx.l10n.us_,
    'UY': (ctx) => ctx.l10n.uy_,
    'UZ': (ctx) => ctx.l10n.uz_,
    'VU': (ctx) => ctx.l10n.vu_,
    'VE': (ctx) => ctx.l10n.ve_,
    'VN': (ctx) => ctx.l10n.vn_,
    'VG': (ctx) => ctx.l10n.vg_,
    'VI': (ctx) => ctx.l10n.vi_,
    'WF': (ctx) => ctx.l10n.wf_,
    'YE': (ctx) => ctx.l10n.ye_,
    'ZM': (ctx) => ctx.l10n.zm_,
    'ZW': (ctx) => ctx.l10n.zw_
  };

  /// Localised name depending on the current application locale
  /// If you have many LocalisedName to handle in a same context, consider
  /// supplying the second optional PhoneFieldLocalization to avoid
  // ignore: comment_references
  /// walking up the widget to get [PhoneFieldLocalization] instance
  /// for each call.
  // static String localisedName(
  //   BuildContext context,
  //   Country country,
  // ) {
  //   String? name = getCountryNameForIsoCode(context, country.isoCode);
  //   return name ?? country.name;
  // }

  static String? getNameForCode(BuildContext ctx, String code) {
    final translateFn = _countryNames[code.toUpperCase()];
    return translateFn?.call(ctx);
  }
}
